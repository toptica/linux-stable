/*
 * Copyright 2007-2009 Freescale Semiconductor, Inc. All Rights Reserved.
 */

/*
 * The code contained herein is licensed under the GNU General Public
 * License. You may obtain a copy of the GNU General Public License
 * Version 2 or later at the following locations:
 *
 * http://www.opensource.org/licenses/gpl-license.html
 * http://www.gnu.org/copyleft/gpl.html
 */

#ifndef __ASM_ARCH_MXC_SDMA_REGS_H__
#define __ASM_ARCH_MXC_SDMA_REGS_H__

#ifdef DEBUG
#ifdef CONFIG_MACH_TX25
extern int tx25_debug;
#define dbg_lvl(n)	((n) < tx25_debug)
#elif defined(CONFIG_MACH_TX51)
extern int tx51_debug;
#define dbg_lvl(n)	((n) < tx51_debug)
#else
#error No debug support for this machine
#endif
#define DBG(lvl, fmt...)	do { if (dbg_lvl(lvl)) printk(KERN_DEBUG fmt); } while (0)
#else
#define dbg_lvl(n)	0
#define DBG(lvl, fmt...)	do { } while (0)
#endif

#ifdef __KERNEL__
#include <linux/kernel.h>
#include <linux/bug.h>
#include <linux/io.h>
#include <asm/memory.h>
#endif

#include <linux/compiler.h>
#include <mach/hardware.h>

/* SDMA Reg definition */
extern void __iomem *sdma_base_addr;
#define SDMA_BASE_IO_ADDR sdma_base_addr

#ifdef DEBUG
#define __sdma_pa(a)		((a) - SDMA_BASE_IO_ADDR + SDMA_BASE_ADDR)

static inline u32 iapi_raw_readl(void __iomem *addr,
				const char *name, const char *fn)
{
	u32 val;

	DBG(1, "%s: Reading %s[%08lx]\n", fn,
		name, __sdma_pa(addr));
	val = __raw_readl(addr);
	DBG(0, "%s: Read %08x from %s[%08lx]\n", fn,
		val, name, __sdma_pa(addr));
	return val;
}

static inline void iapi_raw_writel(u32 val, void __iomem *addr,
				const char *name, const char *fn)
{
	DBG(0, "%s: Writing %08x to %s[%08lx]\n", fn,
		val, name, __sdma_pa(addr));
	__raw_writel(val, addr);

}

#undef __raw_writel
#undef __raw_readl

#define __raw_readl(a)		iapi_raw_readl(a, #a, __func__)
#define __raw_writel(v, a)	iapi_raw_writel(v, a, #a, __func__)
#endif

#define __REG32(base, offs)	((base) + (offs))
#define __REG_ARRAY(base, offs, num, index) ({	\
	BUG_ON((unsigned int)(index) >= (num));	\
	__REG32(base, (offs) + ((index) << 2));	\
})

#define SDMA_H_C0PTR		__REG32(SDMA_BASE_IO_ADDR, 0x000)
#define SDMA_H_INTR		__REG32(SDMA_BASE_IO_ADDR, 0x004)
#define SDMA_H_STATSTOP		__REG32(SDMA_BASE_IO_ADDR, 0x008)
#define SDMA_H_START		__REG32(SDMA_BASE_IO_ADDR, 0x00C)
#define SDMA_H_EVTOVR		__REG32(SDMA_BASE_IO_ADDR, 0x010)
#define SDMA_H_DSPOVR		__REG32(SDMA_BASE_IO_ADDR, 0x014)
#define SDMA_H_HOSTOVR		__REG32(SDMA_BASE_IO_ADDR, 0x018)
#define SDMA_H_EVTPEND		__REG32(SDMA_BASE_IO_ADDR, 0x01C)
#define SDMA_H_DSPENBL		__REG32(SDMA_BASE_IO_ADDR, 0x020)
#define SDMA_H_RESET		__REG32(SDMA_BASE_IO_ADDR, 0x024)
#define SDMA_H_EVTERR		__REG32(SDMA_BASE_IO_ADDR, 0x028)
#define SDMA_H_INTRMSK		__REG32(SDMA_BASE_IO_ADDR, 0x02C)
#define SDMA_H_PSW		__REG32(SDMA_BASE_IO_ADDR, 0x030)
#define SDMA_H_EVTERRDBG	__REG32(SDMA_BASE_IO_ADDR, 0x034)
#define SDMA_H_CONFIG		__REG32(SDMA_BASE_IO_ADDR, 0x038)
#define SDMA_SDMA_LOCK		__REG32(SDMA_BASE_IO_ADDR, 0x03C)
#define SDMA_ONCE_ENB		__REG32(SDMA_BASE_IO_ADDR, 0x040)
#define SDMA_ONCE_DATA		__REG32(SDMA_BASE_IO_ADDR, 0x044)
#define SDMA_ONCE_INSTR		__REG32(SDMA_BASE_IO_ADDR, 0x048)
#define SDMA_ONCE_STAT		__REG32(SDMA_BASE_IO_ADDR, 0x04C)
#define SDMA_ONCE_CMD		__REG32(SDMA_BASE_IO_ADDR, 0x050)
#define SDMA_EVT_MIRROR		__REG32(SDMA_BASE_IO_ADDR, 0x054)
#define SDMA_ILLINSTADDR	__REG32(SDMA_BASE_IO_ADDR, 0x058)
#define SDMA_CHN0ADDR		__REG32(SDMA_BASE_IO_ADDR, 0x05C)
#define SDMA_ONCE_RTB		__REG32(SDMA_BASE_IO_ADDR, 0x060)
#define SDMA_XTRIG_CONF1	__REG32(SDMA_BASE_IO_ADDR, 0x070)
#define SDMA_XTRIG_CONF2	__REG32(SDMA_BASE_IO_ADDR, 0x074)

#ifdef SDMA_V2
#define SDMA_CHNENBL(i)		__REG_ARRAY(SDMA_BASE_IO_ADDR, 0x200, 48, i)
#define SDMA_CHNENBL_0		__REG32(SDMA_BASE_IO_ADDR, 0x200)
#define SDMA_CHNENBL_1		__REG32(SDMA_BASE_IO_ADDR, 0x204)
#define SDMA_CHNENBL_2		__REG32(SDMA_BASE_IO_ADDR, 0x208)
#define SDMA_CHNENBL_3		__REG32(SDMA_BASE_IO_ADDR, 0x20C)
#define SDMA_CHNENBL_4		__REG32(SDMA_BASE_IO_ADDR, 0x210)
#define SDMA_CHNENBL_5		__REG32(SDMA_BASE_IO_ADDR, 0x214)
#define SDMA_CHNENBL_6		__REG32(SDMA_BASE_IO_ADDR, 0x218)
#define SDMA_CHNENBL_7		__REG32(SDMA_BASE_IO_ADDR, 0x21C)
#define SDMA_CHNENBL_8		__REG32(SDMA_BASE_IO_ADDR, 0x220)
#define SDMA_CHNENBL_9		__REG32(SDMA_BASE_IO_ADDR, 0x224)
#define SDMA_CHNENBL_10		__REG32(SDMA_BASE_IO_ADDR, 0x228)
#define SDMA_CHNENBL_11		__REG32(SDMA_BASE_IO_ADDR, 0x22C)
#define SDMA_CHNENBL_12		__REG32(SDMA_BASE_IO_ADDR, 0x230)
#define SDMA_CHNENBL_13		__REG32(SDMA_BASE_IO_ADDR, 0x234)
#define SDMA_CHNENBL_14		__REG32(SDMA_BASE_IO_ADDR, 0x238)
#define SDMA_CHNENBL_15		__REG32(SDMA_BASE_IO_ADDR, 0x23C)
#define SDMA_CHNENBL_16		__REG32(SDMA_BASE_IO_ADDR, 0x240)
#define SDMA_CHNENBL_17		__REG32(SDMA_BASE_IO_ADDR, 0x244)
#define SDMA_CHNENBL_18		__REG32(SDMA_BASE_IO_ADDR, 0x248)
#define SDMA_CHNENBL_19		__REG32(SDMA_BASE_IO_ADDR, 0x24C)
#define SDMA_CHNENBL_20		__REG32(SDMA_BASE_IO_ADDR, 0x250)
#define SDMA_CHNENBL_21		__REG32(SDMA_BASE_IO_ADDR, 0x254)
#define SDMA_CHNENBL_22		__REG32(SDMA_BASE_IO_ADDR, 0x258)
#define SDMA_CHNENBL_23		__REG32(SDMA_BASE_IO_ADDR, 0x25C)
#define SDMA_CHNENBL_24		__REG32(SDMA_BASE_IO_ADDR, 0x260)
#define SDMA_CHNENBL_25		__REG32(SDMA_BASE_IO_ADDR, 0x264)
#define SDMA_CHNENBL_26		__REG32(SDMA_BASE_IO_ADDR, 0x268)
#define SDMA_CHNENBL_27		__REG32(SDMA_BASE_IO_ADDR, 0x26C)
#define SDMA_CHNENBL_28		__REG32(SDMA_BASE_IO_ADDR, 0x270)
#define SDMA_CHNENBL_29		__REG32(SDMA_BASE_IO_ADDR, 0x274)
#define SDMA_CHNENBL_30		__REG32(SDMA_BASE_IO_ADDR, 0x278)
#define SDMA_CHNENBL_31		__REG32(SDMA_BASE_IO_ADDR, 0x27C)
#define SDMA_CHNENBL_32		__REG32(SDMA_BASE_IO_ADDR, 0x280)
#define SDMA_CHNENBL_33		__REG32(SDMA_BASE_IO_ADDR, 0x284)
#define SDMA_CHNENBL_34		__REG32(SDMA_BASE_IO_ADDR, 0x288)
#define SDMA_CHNENBL_35		__REG32(SDMA_BASE_IO_ADDR, 0x28C)
#define SDMA_CHNENBL_36		__REG32(SDMA_BASE_IO_ADDR, 0x290)
#define SDMA_CHNENBL_37		__REG32(SDMA_BASE_IO_ADDR, 0x294)
#define SDMA_CHNENBL_38		__REG32(SDMA_BASE_IO_ADDR, 0x298)
#define SDMA_CHNENBL_39		__REG32(SDMA_BASE_IO_ADDR, 0x29C)
#define SDMA_CHNENBL_40		__REG32(SDMA_BASE_IO_ADDR, 0x2A0)
#define SDMA_CHNENBL_41		__REG32(SDMA_BASE_IO_ADDR, 0x2A4)
#define SDMA_CHNENBL_42		__REG32(SDMA_BASE_IO_ADDR, 0x2A8)
#define SDMA_CHNENBL_43		__REG32(SDMA_BASE_IO_ADDR, 0x2AC)
#define SDMA_CHNENBL_44		__REG32(SDMA_BASE_IO_ADDR, 0x2B0)
#define SDMA_CHNENBL_45		__REG32(SDMA_BASE_IO_ADDR, 0x2B4)
#define SDMA_CHNENBL_46		__REG32(SDMA_BASE_IO_ADDR, 0x2B8)
#define SDMA_CHNENBL_47		__REG32(SDMA_BASE_IO_ADDR, 0x2BC)

#define SDMA_ONCE_COUNT		__REG32(SDMA_BASE_IO_ADDR, 0x300)
#define SDMA_ONCE_ECTL		__REG32(SDMA_BASE_IO_ADDR, 0x304)
#define SDMA_ONCE_EAA		__REG32(SDMA_BASE_IO_ADDR, 0x308)
#define SDMA_ONCE_EAB		__REG32(SDMA_BASE_IO_ADDR, 0x30C)
#define SDMA_ONCE_EAM		__REG32(SDMA_BASE_IO_ADDR, 0x310)
#define SDMA_ONCE_ED		__REG32(SDMA_BASE_IO_ADDR, 0x314)
#define SDMA_ONCE_EDM		__REG32(SDMA_BASE_IO_ADDR, 0x318)
#define SDMA_ONCE_PCMATCH	__REG32(SDMA_BASE_IO_ADDR, 0x31C)

#else

#define SDMA_CHNENBL(i)		__REG_ARRAY(SDMA_BASE_IO_ADDR, 0x80, 32, i)
#define SDMA_CHNENBL_0		__REG32(SDMA_BASE_IO_ADDR, 0x080)
#define SDMA_CHNENBL_1		__REG32(SDMA_BASE_IO_ADDR, 0x084)
#define SDMA_CHNENBL_2		__REG32(SDMA_BASE_IO_ADDR, 0x088)
#define SDMA_CHNENBL_3		__REG32(SDMA_BASE_IO_ADDR, 0x08C)
#define SDMA_CHNENBL_4		__REG32(SDMA_BASE_IO_ADDR, 0x090)
#define SDMA_CHNENBL_5		__REG32(SDMA_BASE_IO_ADDR, 0x094)
#define SDMA_CHNENBL_6		__REG32(SDMA_BASE_IO_ADDR, 0x098)
#define SDMA_CHNENBL_7		__REG32(SDMA_BASE_IO_ADDR, 0x09C)
#define SDMA_CHNENBL_8		__REG32(SDMA_BASE_IO_ADDR, 0x0A0)
#define SDMA_CHNENBL_9		__REG32(SDMA_BASE_IO_ADDR, 0x0A4)
#define SDMA_CHNENBL_10		__REG32(SDMA_BASE_IO_ADDR, 0x0A8)
#define SDMA_CHNENBL_11		__REG32(SDMA_BASE_IO_ADDR, 0x0AC)
#define SDMA_CHNENBL_12		__REG32(SDMA_BASE_IO_ADDR, 0x0B0)
#define SDMA_CHNENBL_13		__REG32(SDMA_BASE_IO_ADDR, 0x0B4)
#define SDMA_CHNENBL_14		__REG32(SDMA_BASE_IO_ADDR, 0x0B8)
#define SDMA_CHNENBL_15		__REG32(SDMA_BASE_IO_ADDR, 0x0BC)
#define SDMA_CHNENBL_16		__REG32(SDMA_BASE_IO_ADDR, 0x0C0)
#define SDMA_CHNENBL_17		__REG32(SDMA_BASE_IO_ADDR, 0x0C4)
#define SDMA_CHNENBL_18		__REG32(SDMA_BASE_IO_ADDR, 0x0C8)
#define SDMA_CHNENBL_19		__REG32(SDMA_BASE_IO_ADDR, 0x0CC)
#define SDMA_CHNENBL_20		__REG32(SDMA_BASE_IO_ADDR, 0x0D0)
#define SDMA_CHNENBL_21		__REG32(SDMA_BASE_IO_ADDR, 0x0D4)
#define SDMA_CHNENBL_22		__REG32(SDMA_BASE_IO_ADDR, 0x0D8)
#define SDMA_CHNENBL_23		__REG32(SDMA_BASE_IO_ADDR, 0x0DC)
#define SDMA_CHNENBL_24		__REG32(SDMA_BASE_IO_ADDR, 0x0E0)
#define SDMA_CHNENBL_25		__REG32(SDMA_BASE_IO_ADDR, 0x0E4)
#define SDMA_CHNENBL_26		__REG32(SDMA_BASE_IO_ADDR, 0x0E8)
#define SDMA_CHNENBL_27		__REG32(SDMA_BASE_IO_ADDR, 0x0EC)
#define SDMA_CHNENBL_28		__REG32(SDMA_BASE_IO_ADDR, 0x0F0)
#define SDMA_CHNENBL_29		__REG32(SDMA_BASE_IO_ADDR, 0x0F4)
#define SDMA_CHNENBL_30		__REG32(SDMA_BASE_IO_ADDR, 0x0F8)
#define SDMA_CHNENBL_31		__REG32(SDMA_BASE_IO_ADDR, 0x0FC)

#define SDMA_ONCE_COUNT		__REG32(SDMA_BASE_IO_ADDR, 0x200)
#define SDMA_ONCE_ECTL		__REG32(SDMA_BASE_IO_ADDR, 0x204)
#define SDMA_ONCE_EAA		__REG32(SDMA_BASE_IO_ADDR, 0x208)
#define SDMA_ONCE_EAB		__REG32(SDMA_BASE_IO_ADDR, 0x20C)
#define SDMA_ONCE_EAM		__REG32(SDMA_BASE_IO_ADDR, 0x210)
#define SDMA_ONCE_ED		__REG32(SDMA_BASE_IO_ADDR, 0x214)
#define SDMA_ONCE_EDM		__REG32(SDMA_BASE_IO_ADDR, 0x218)
#define SDMA_ONCE_PCMATCH	__REG32(SDMA_BASE_IO_ADDR, 0x21C)

#endif /* SDMA_V2 */

#define SDMA_CHNPRI(i)		__REG_ARRAY(SDMA_BASE_IO_ADDR, 0x100, 32, i)
#define SDMA_CHNPRI_0		__REG32(SDMA_BASE_IO_ADDR, 0x100)
#define SDMA_CHNPRI_1		__REG32(SDMA_BASE_IO_ADDR, 0x104)
#define SDMA_CHNPRI_2		__REG32(SDMA_BASE_IO_ADDR, 0x108)
#define SDMA_CHNPRI_3		__REG32(SDMA_BASE_IO_ADDR, 0x10C)
#define SDMA_CHNPRI_4		__REG32(SDMA_BASE_IO_ADDR, 0x110)
#define SDMA_CHNPRI_5		__REG32(SDMA_BASE_IO_ADDR, 0x114)
#define SDMA_CHNPRI_6		__REG32(SDMA_BASE_IO_ADDR, 0x118)
#define SDMA_CHNPRI_7		__REG32(SDMA_BASE_IO_ADDR, 0x11C)
#define SDMA_CHNPRI_8		__REG32(SDMA_BASE_IO_ADDR, 0x120)
#define SDMA_CHNPRI_9		__REG32(SDMA_BASE_IO_ADDR, 0x124)
#define SDMA_CHNPRI_10		__REG32(SDMA_BASE_IO_ADDR, 0x128)
#define SDMA_CHNPRI_11		__REG32(SDMA_BASE_IO_ADDR, 0x12C)
#define SDMA_CHNPRI_12		__REG32(SDMA_BASE_IO_ADDR, 0x130)
#define SDMA_CHNPRI_13		__REG32(SDMA_BASE_IO_ADDR, 0x134)
#define SDMA_CHNPRI_14		__REG32(SDMA_BASE_IO_ADDR, 0x138)
#define SDMA_CHNPRI_15		__REG32(SDMA_BASE_IO_ADDR, 0x13C)
#define SDMA_CHNPRI_16		__REG32(SDMA_BASE_IO_ADDR, 0x140)
#define SDMA_CHNPRI_17		__REG32(SDMA_BASE_IO_ADDR, 0x144)
#define SDMA_CHNPRI_18		__REG32(SDMA_BASE_IO_ADDR, 0x148)
#define SDMA_CHNPRI_19		__REG32(SDMA_BASE_IO_ADDR, 0x14C)
#define SDMA_CHNPRI_20		__REG32(SDMA_BASE_IO_ADDR, 0x150)
#define SDMA_CHNPRI_21		__REG32(SDMA_BASE_IO_ADDR, 0x154)
#define SDMA_CHNPRI_22		__REG32(SDMA_BASE_IO_ADDR, 0x158)
#define SDMA_CHNPRI_23		__REG32(SDMA_BASE_IO_ADDR, 0x15C)
#define SDMA_CHNPRI_24		__REG32(SDMA_BASE_IO_ADDR, 0x160)
#define SDMA_CHNPRI_25		__REG32(SDMA_BASE_IO_ADDR, 0x164)
#define SDMA_CHNPRI_26		__REG32(SDMA_BASE_IO_ADDR, 0x168)
#define SDMA_CHNPRI_27		__REG32(SDMA_BASE_IO_ADDR, 0x16C)
#define SDMA_CHNPRI_28		__REG32(SDMA_BASE_IO_ADDR, 0x170)
#define SDMA_CHNPRI_29		__REG32(SDMA_BASE_IO_ADDR, 0x174)
#define SDMA_CHNPRI_30		__REG32(SDMA_BASE_IO_ADDR, 0x178)
#define SDMA_CHNPRI_31		__REG32(SDMA_BASE_IO_ADDR, 0x17C)

#endif /* _mcuEpm_h */
